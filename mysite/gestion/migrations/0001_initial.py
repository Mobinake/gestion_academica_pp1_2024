# Generated by Django 5.0.4 on 2024-12-19 20:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id_materia', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_materia', models.CharField(max_length=50)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('termminado', 'Terminado')], default='inactivo', max_length=25)),
                ('anio', models.IntegerField(default=2020)),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
                'db_table': 'materia',
                'ordering': ['id_materia', 'nombre_materia'],
            },
        ),
        migrations.CreateModel(
            name='Metodologia',
            fields=[
                ('id_metodologia', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_metodologia', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Metodologia',
                'verbose_name_plural': 'Metodologias',
                'db_table': 'metodologia',
                'ordering': ['id_metodologia', 'nombre_metodologia'],
            },
        ),
        migrations.CreateModel(
            name='tipo_evaluacion',
            fields=[
                ('id_tipo_evaluacion', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_tipo_evaluacion', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Tipo de Evaluacion',
                'verbose_name_plural': 'Tipos de Evaluaciones',
                'db_table': 'tipo_evaluacion',
                'ordering': ['id_tipo_evaluacion', 'nombre_tipo_evaluacion'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id_horario', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.CharField(choices=[('lunes', 'Lunes'), ('martes', 'Martes'), ('miercoles', 'Miércoles'), ('jueves', 'Jueves'), ('viernes', 'Viernes'), ('sabado', 'Sábado'), ('domingo', 'Domingo')], default='lunes', max_length=10)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('id_materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.materia')),
            ],
            options={
                'verbose_name': 'Horario',
                'verbose_name_plural': 'Horarios',
                'db_table': 'horario',
                'ordering': ['id_horario'],
            },
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id_matricula', models.AutoField(primary_key=True, serialize=False)),
                ('detalles', models.CharField(max_length=150)),
                ('monto', models.IntegerField()),
                ('fecha', models.DateField(auto_now_add=True)),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Matricula',
                'verbose_name_plural': 'Matriculas',
                'db_table': 'matricula',
                'ordering': ['id_matricula', 'fecha'],
            },
        ),
        migrations.CreateModel(
            name='matricula_materia',
            fields=[
                ('id_matri_mater', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_matricula_materia', models.CharField(max_length=100)),
                ('estado', models.BooleanField(default=True)),
                ('id_materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.materia')),
                ('id_matricula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.matricula')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id_evaluacion', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_evaluacion', models.CharField(max_length=100)),
                ('total_puntos', models.IntegerField(default=100)),
                ('descripcion', models.CharField(max_length=100)),
                ('id_matricula_materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.matricula_materia')),
                ('id_metodologia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.metodologia')),
                ('id_tipo_evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.tipo_evaluacion')),
            ],
            options={
                'verbose_name': 'Evaluacion',
                'verbose_name_plural': 'Evaluaciones',
                'db_table': 'evaluacion',
                'ordering': ['id_evaluacion', 'id_tipo_evaluacion', 'id_metodologia'],
            },
        ),
    ]
